name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}

jobs:

  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black[jupyter] ruff

      - name: Check formatting and linting
        run: black --check . && ruff .

  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test,dev]

      - name: Run tests
        run: pytest ./tests --color=yes

  Release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [Lint, Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build
        run: |
          python -m build
          twine check dist/*
          ls -lh dist

      - name: Publish to PyPI
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
